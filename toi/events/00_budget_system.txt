add_namespace = budget_calculation

news_event = {
	id = budget_calculation.0
	title = budget_calculation.0.t
	desc = budget_calculation.0.d
	picture = GFX_report_event_election_vote
	
	is_triggered_only = yes

	immediate = {

        every_country = {

        	set_variable = {
        		var = total_population
        		value = 0
        	}

            every_owned_state = {
                #Get the state's population
                set_variable = {
                    var = var_state_population
                    value = state_population
                }

                #Check if the number has overflowed. If it has overflowed, it will have a decimal point value
               	#So do mod 1 to see if there's a decimal point value
               	#Easy way of doing this in PDox script is creating a temp variable that is a rounded version of
               	#the variable you want to do a mod function on, and seeing if it's lower than the unrounded one.
               	set_variable = {
               		var = mod_one_state_population
               		value = var_state_population
               	}
               	round_variable = mod_one_state_population

                if = {
                	limit = {
	                	check_variable = {
		                	var = var_state_population
		                	value = mod_one_state_population
		                	compare = not_equals
	               		}
                	}
                	set_variable = {
                		var = var_overflow_warning
                		value = 1
                	}
                }
                #Make the number easier to handle without risk of overflow at 2^31
                multiply_variable = {
                	var = var_state_population
                	value = 0.01
               	}

               	#Check if the value has suffered an overflow due to going over a value of 2^31
                if = {
                	limit = {
                		check_variable = {
                			var = var_overflow_warning
                			value = 1
                			compare = equals
                		}
                	}
                	#If variable is negative, make it positive
                	if = {
                		limit = {
                			check_variable = {
                				var = var_state_population
                				value = 0
                				compare = less_than
                			}
                		}
	                	multiply_variable = {
	                		var = var_state_population
	                		value = -1
	                	}
                	}
                	#Create a temporary variable to find the difference that we need to add to make the numbers equivalent
                	set_temp_variable = {
                		var = temp_var_overflow_difference
                		value = var_state_population
                	}

                	#Subtract (((2^31) -1) x 0.01)
                	subtract_from_temp_variable = {
                		var = temp_var_overflow_difference
                		value = 21474.83
                	}

                	#Multiply the result by two
                	multiply_temp_variable = {
                		var = temp_var_overflow_difference
                		value = 2
                	}

                	#If the difference is negative, make it positive
                	if = {
                		limit = {
                			check_variable = {
                				var = temp_var_overflow_difference
                				value = 0
                				compare = less_than
                			}
                		}
                		multiply_temp_variable = {
                			var = temp_var_overflow_difference
                			value = -1
                		}
                	}

                	#Add the result to the var_state_population total
                	add_to_variable = {
                		var = var_state_population
                		value = temp_var_overflow_difference
                	}
                }

                #Delete the variables used in calculation
                clear_variable = var_overflow_warning
                clear_variable = mod_one_state_population

                #Add this to the total population of the country
                add_to_variable = {
                	var = PREV.total_population
                	value = var_state_population
                }
            }

########    ###    ##     ## ########  ######  
   ##      ## ##    ##   ##  ##       ##    ## 
   ##     ##   ##    ## ##   ##       ##       
   ##    ##     ##    ###    ######    ######  
   ##    #########   ## ##   ##             ## 
   ##    ##     ##  ##   ##  ##       ##    ## 
   ##    ##     ## ##     ## ########  ###### 

			#Check the country's tax rate and return a number relative to the tax rate policy.
			if = {
				limit = {
					has_idea = very_low_taxes
				}
				set_variable = {
					var = var_taxrate
					value = 0.05
				}
			}

			if = {
				limit = {
					has_idea = low_taxes
				}
				set_variable = {
					var = var_taxrate
					value = 0.1
				}
			}

			if = {
				limit = {
					has_idea = normal_taxes
				}
				set_variable = {
					var = var_taxrate
					value = 0.15
				}
			}

			if = {
				limit = {
					has_idea = high_taxes
				}
				set_variable = {
					var = var_taxrate
					value = 0.2
				}
			}

			if = {
				limit = {
					has_idea = very_high_taxes
				}
				set_variable = {
					var = var_taxrate
					value = 0.25
				}
			}

		}

	}

	option = {
		name = budget_calculation_option.1.a #OK
	}

}
